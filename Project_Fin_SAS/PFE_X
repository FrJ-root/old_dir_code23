#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

// Structure pour une tâche
struct Task {
    int id;
    char title[50];
    char description[100];
    char deadline[20];
    char status[20];
    char creationDate[20];
    int isComplete;
};

// Structure pour un collaborateur
struct Collaborator {
    char firstName[50];
    char lastName[50];
    char email[100];
};

// Fonction pour afficher le menu principal
void displayMenu() {
    printf(         "*========================================================================================*\n");
    printf(         "|                                            MENU                                        |\n");
    printf(         "*========================================================================================*\n");
    printf(         "|  1. Ajouter une nouvelle tache                                                         |\n");
    printf(         "|  2. Afficher la liste des taches                                                       |\n");
    printf(         "|  3. Trier les taches par ordre alphabetique                                            |\n");
    printf(         "|  4. Trier les taches par deadline                                                      |\n");
    printf(         "|  5. Afficher les taches dont le deadline est dans 3 jours ou moins                     |\n");
    printf(         "|  6. Modifier une tache                                                                 |\n");
    printf(         "|  7. Supprimer une tache par identifiant                                                |\n");
    printf(         "|  8. Rechercher une tache par identifiant                                               |\n");
    printf(         "|  9. Rechercher une tache par titre                                                     |\n");
    printf(         "|  10. Statistiques                                                                      |\n");
    printf(         "|  11. Quitter                                                                           |\n");
    printf(         "*========================================================================================*\n");
}

// Fonction pour ajouter une tâche
void addTask(struct Task tasks[], int *taskCount) {
    struct Task newTask;
    newTask.id = *taskCount + 1;
    printf("Titre : ");
    scanf(" %[^\n]s", newTask.title);
    printf("Description : ");
    scanf(" %[^\n]s", newTask.description);
    printf("Deadline (jj/mm/aaaa) : ");
    scanf(" %[^\n]s", newTask.deadline);
    printf("Statut (a realiser/en cours/finalisee) : ");
    scanf(" %[^\n]s", newTask.status);
    time_t t = time(NULL);
    struct tm tm = *localtime(&t);
    sprintf(newTask.creationDate, "%02d/%02d/%04d", tm.tm_mday, tm.tm_mon + 1, tm.tm_year + 1900);
    newTask.isComplete = 0;
    tasks[*taskCount] = newTask;
    (*taskCount)++;
    printf("Tache ajoutee avec succes.\n");
}

// Fonction pour afficher la liste des tâches
void displayTasks(struct Task tasks[], int taskCount) {
    printf("\nListe des taches :\n");
    for (int i = 0; i < taskCount; i++) {
        printf("Tache %d:\n", tasks[i].id);
        printf("Titre : %s\n", tasks[i].title);
        printf("Description : %s\n", tasks[i].description);
        printf("Deadline : %s\n", tasks[i].deadline);
        printf("Statut : %s\n", tasks[i].status);
        printf("Date de creation : %s\n", tasks[i].creationDate);
        printf("Statut : %s\n", tasks[i].isComplete ? "Complete" : "Incomplete");
    }
}

int main() {
    struct Task tasks[100];
    int taskCount = 0;

    int choice;
    do {
        displayMenu();
        printf("Choisissez une option : ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                // Ajouter une nouvelle tache
                if (taskCount < 100) {
                    addTask(tasks, &taskCount);
                } else {
                    printf("La liste de taches est pleine.\n");
                }
                break;
            case 2:
                // Afficher la liste des taches
                displayTasks(tasks, taskCount);
                break;
            // Ajoutez d'autres cas pour les fonctionnalités restantes
            case 11:
                printf("Au revoir !\n");
                break;
            default:
                printf("Option invalide. Veuillez reessayer.\n");
        }
    } while (choice != 11);

    return 0;
}


